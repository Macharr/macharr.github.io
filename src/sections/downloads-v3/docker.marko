<dl class="install-steps">
    <install-step title="Introduction">
        <p>
            The Sonarr team does not offer an official Docker image, instead a number of third parties have created and maintain their own.
        </p>
        <h5>Volumes and Paths</h5>
        <p>
            There are actually two common problems with volumes: Paths that differ between the Sonarr and download client container and paths that prevent fast moves and hard links.
            The first is a problem because the download client will report a download's path as <code>/torrents/My.Series.S01E01/</code>, but in the Sonarr container that might be at
            <code>/downloads/My.Series.S01E01/</code>. The second is a problem for long term torrent seeders, but slow moves are annoying for everyone. Both problems can be solved with
            well planned, consistant paths.
        </p>
        <p>
            Most containers suggest paths like <code>/tv</code> and <code>/downloads</code>, which causes the slow moves and impossible hard links problem because inside the container they
            look like different file systems. Some also recommend paths for the download client container that are different from the Sonarr container, like <code>/torrents</code>. The best
            solution to both is to use a single, common volume <i>inside</i> the containers like <code>/data</code>. Your TV shows would be in <code>/data/TV</code>, torrents in <code>/data/downloads/torrents</code>
            and/or usenet in <code>/data/downloads/usenet</code>.
        </p>
        <h5>Ownership and Permissions</h5>
        <p>
            Permissions and ownership of files is one of the most common problems for Sonarr users, both inside and outside Docker. Most images have environment variables that can be used to override
            the default user, group and umask, you should decide this before setting up all of your containers. The ideal is a user for each software and a common group, but a dedicated user or even your own user
            are common as well. Keep in mind that Sonarr will need read and write to the download folders as well as the final folders.
        </p>
        <p>
            For a more detailed explaination of these issues, see <a href="https://www.reddit.com/r/usenet/wiki/docker">The Best Docker Setup</a> wiki article on Reddit.
        </p>
    </install-step>
    <install-step title="Install Sonarr">
        <p>
            To install and use these Docker images, you'll need to keep the above in mind while following their documentation. There are many ways to manage Docker images and containers too, so installation
            and maintenance of them will depend on the route you choose.
            <ul>
                <li><a href="https://hub.docker.com/r/lsiodev/sonarr-preview">lsiodev/sonarr-preview</a> is made by <a href="//www.linuxserver.io">linuxserver.io</a>, one of the most prolific and popular
                Docker image maintainers. They also maintain images for most of the popular download clients as well.</li>
                <li><a href="https://hub.docker.com/r/hotio/suitarr/">hotio/suitarr</a> doesn't make any specific path suggestions, but uses labels for each software it supports instead of individual Docker images.</li>
            </ul>
        </p>
    </install-step>
</dl>